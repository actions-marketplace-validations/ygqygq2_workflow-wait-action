[{"/mnt/d/gitdata/workflow-wait-action/src/config.ts":"1","/mnt/d/gitdata/workflow-wait-action/src/github.ts":"2","/mnt/d/gitdata/workflow-wait-action/src/index.ts":"3","/mnt/d/gitdata/workflow-wait-action/src/time.ts":"4"},{"size":1053,"mtime":1675407003761,"results":"5","hashOfConfig":"6"},{"size":2733,"mtime":1675406749498,"results":"7","hashOfConfig":"6"},{"size":552,"mtime":1675396732931,"results":"8","hashOfConfig":"6"},{"size":1207,"mtime":1675396732958,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mf8wmg",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/d/gitdata/workflow-wait-action/src/config.ts",[],["22"],"/mnt/d/gitdata/workflow-wait-action/src/github.ts",["23","24","25","26"],[],"/mnt/d/gitdata/workflow-wait-action/src/index.ts",["27"],[],"/mnt/d/gitdata/workflow-wait-action/src/time.ts",["28","29"],[],{"ruleId":"30","severity":2,"message":"31","line":13,"column":6,"nodeType":"32","messageId":"33","endLine":13,"endColumn":18,"suppressions":"34"},{"ruleId":"35","severity":1,"message":"36","line":21,"column":28,"nodeType":"37","messageId":"38","endLine":21,"endColumn":39},{"ruleId":"35","severity":1,"message":"36","line":36,"column":31,"nodeType":"37","messageId":"38","endLine":36,"endColumn":42},{"ruleId":"35","severity":1,"message":"36","line":53,"column":24,"nodeType":"37","messageId":"38","endLine":53,"endColumn":44},{"ruleId":"35","severity":1,"message":"36","line":75,"column":28,"nodeType":"37","messageId":"38","endLine":75,"endColumn":77},{"ruleId":"39","severity":1,"message":"40","line":12,"column":15,"nodeType":"41","messageId":"42","endLine":12,"endColumn":18,"suggestions":"43"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":19,"nodeType":"37","messageId":"38","endLine":6,"endColumn":58},{"ruleId":"35","severity":1,"message":"36","line":11,"column":15,"nodeType":"37","messageId":"38","endLine":11,"endColumn":42},"no-shadow","'ActionStatus' is already declared in the upper scope on line 13 column 6.","Identifier","noShadow",["44"],"@typescript-eslint/explicit-function-return-type","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["45","46"],{"kind":"47","justification":"48"},{"messageId":"49","fix":"50","desc":"51"},{"messageId":"52","fix":"53","desc":"54"},"directive","","suggestUnknown",{"range":"55","text":"56"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"55","text":"57"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[439,442],"unknown","never"]